extends layout.pug

block scripts
  title Détails d'une machine
  script(src="js/detailsMachine.js")

block content
  .row
    h1 Détails de la machine #{glider['immat']}
      if $glider['concours'] != ''
        = ' ('.$glider['concours'].') '
      = $glider['modele']
  if $lastLog != null
    .row
      .col-lg-1.col-sm-12.col-xs-12
        case $lastLog['versionHard']
          when 'Flarm05'
            img.img-fluid(src="/img/flarm_sans_sd.jpg")
          when 'Flarm06'
            img.img-fluid(src="/img/flarm_classic.jpg")
          when 'PowerFLARM-IGC'
            img.img-fluid(src="/img/flarm_power.jpg")
          when 'PowerFLARM'
            img.img-fluid(src="/img/flarm_power.jpg")
          default
            p Modèle de FLARM inconnu (#{$lastLog['versionHard']})
  .row.mt-2.mb-2
    .col-lg-4.col-sm-12.col-xs-12
      if $glider['cenExpirationDate'] != null
        if isBefore($glider['cenExpirationDate'], time())
          .alert.alert-danger.text-center.mt-0.mb-0
            | Expiration du CEN&nbsp;
            = timestampToDate($glider['cenExpirationDate'])
            br
            = timeago($glider['cenExpirationDate'], 'expiré')
        elseif isBefore($glider['cenExpirationDate'], $aprsCenWarningTimestamp)
          .alert.alert-warning.text-center.mt-0.mb-0
            | Expiration du CEN&nbsp;
            = timestampToDate($glider['cenExpirationDate'])
            br
            = reverseTimeago($glider['cenExpirationDate'])
        else
          .alert.alert-success.text-center.mt-0.mb-0
            | Expiration du CEN&nbsp;
            = timestampToDate($glider['cenExpirationDate'])
            br
            = reverseTimeago($glider['cenExpirationDate'])
      if $glider['aprsExpirationDate'] != null
        if isBefore($glider['aprsExpirationDate'], time())
          .alert.alert-danger.text-center.mt-0.mb-0
            | Expiration de l'APRS&nbsp;
            = timestampToDate($glider['aprsExpirationDate'])
            br
            = timeago($glider['aprsExpirationDate'], 'expiré')
        elseif isBefore($glider['aprsExpirationDate'], $aprsCenWarningTimestamp)
          .alert.alert-warning.text-center.mt-0.mb-0
            | Expiration de l'APRS&nbsp;
            = timestampToDate($glider['aprsExpirationDate'])
            br
            = reverseTimeago($glider['aprsExpirationDate'])
        else
          .alert.alert-success.text-center.mt-0.mb-0
            | Expiration de l'APRS&nbsp;
            = timestampToDate($glider['aprsExpirationDate'])
            br
            = reverseTimeago($glider['aprsExpirationDate'])
      if $lastLog != null
        if ($lastLog['versionSoft'] != 'NA')
          if isAGoodFlarmVersion($lastLog['versionSoft']) == false
           .alert.alert-danger.text-center.mt-0.mb-0
             i.bi.bi-exclamation-triangle-fill.me-2
             = 'Version dépassée: '+lastLog['versionSoft']
             i.bi.bi-exclamation-triangle-fill.ms-2
          else
           .alert.alert-success.text-center.mt-0.mb-0
             = lastLog['versionSoft']+' (version à jour)'
        if ($lastLog['rangeBelowMinimum'] == 1)
          .alert.alert-danger.text-center.mt-0.mb-0
            span Portée en deça du minimum
            br
            span.small Valeurs relevées: #{lastLog['rangeDetails']}
        if ($lastLog['flarmAircraftType'] != '') && ($lastLog['flarmAircraftType'] != $glider['aircraftType'])
          .alert.alert-danger.text-center.mt-0.mb-0
            span Le type d'aéronef configuré dans le FLARM (#{$lastLog['flarmAircraftType']}) ne correspond pas au type réel de l'aéronef (#{$glider['aircraftType']})
        if $ognStatus
          .alert.alert-danger.text-center.mt-0.mb-0
            span= $ognStatus
        if $flarmnetStatus
          .alert.alert-danger.text-center.mt-0.mb-0
            span= $flarmnetStatus

  .row.mt-2.mb-2
    .col-xl-4.col-sm-12.col-xs-12
      ul
        li
          if $glider['comment'] == ''
            i.bi.bi-chat.editComment
          else
            span.editComment(data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title=$glider['comment'].' ('.$glider['commentDetails'].')')
              i.bi.bi-chat-fill.me-1
              = $glider['comment']

        if $lastLog != null
          li Id radio: #{lastLog['radioId']}
          li Stealth: #{tinyintVersText(lastLog['stealth'])}
          li No track: #{tinyintVersText(lastLog['noTrack'])}
          li Portée relevée: #{lastLog['rangeDetails']}
          if $lastLog['flarmResultUrl'] != ''
            li
              a(href=$lastLog['flarmResultUrl'] target="_blank") Détails sur le site flarm.com
          if $ognStatus == null
            li OGN: enregistré
          if $flarmnetStatus == null
            li Flarmnet: enregistré

  if $lastLog != null
    .row
      h3 Liste des enregistrements IGC analysés
      .col-12
        .table-responsive
          table.table.table-striped#list
            thead
              tr
                th Date
                th Version FLARM
                th Fichier
                th Modèle
                th Par
                th Analyse de la portée
            tbody
              each line in $flarmLogs
                tr
                  td= timestampToDate($line['when'])
                  td= $line['versionSoft']
                  td= $line['filename']
                  td= $line['versionHard']
                  td= $getMembreNameByGivavNumber($line['who'])
                  td
                    if $line['flarmResultUrl']
                      a(href=$line['flarmResultUrl'] target="_blank") Analyse de la portée
            tfoot
              tr
                th Date
                th Version FLARM
                th Fichier
                th Modèle
                th Par
                th Analyse de la portée
  .hstack.gap-4.mb-3
    button.btn.btn-danger.back Retour

  .modal(tabindex="-1" role="dialog" aria-hidden="true")#modalEditComment
    .modal-dialog
      .modal-content
        .modal-header
          h5 Editer le commentaire
          button.btn.btn-close(type="button" data-bs-dismiss="modal")
        .modal-body
          form(method="POST" action="/editGliderComment")#formEditComment
            input(type="hidden" name="id" value=$glider['id'])
            .btn-group.mb-2(role="group")
              button.btn.btn-outline-primary.clearComment(type="button") Supprimer le commentaire
            .mb-3
              label.form-label(for="comment") Commentaire
              textarea.form-control(name="comment" placeholder="Commentaire" rows="5")#comment= $glider['comment']
        .modal-footer
          button.btn.btn-secondary(type="button" data-bs-dismiss="modal") Annuler
          button.btn.btn-primary(type="button")#addComment Enregistrer
